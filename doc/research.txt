
const mongoose = require('mongoose');

const userSchema = new mongoose.Schema({
  username: { type: String, required: true, unique: true },
  email: { type: String, required: true, unique: true }
});

const User = mongoose.model('User', userSchema);

==============================================================================================================================

const taskTypeSchema = new mongoose.Schema({
  name: { type: String, required: true, unique: true }, // e.g., blog, video, infographic, case study
});

const TaskType = mongoose.model('TaskType', taskTypeSchema);

==============================================================================================================================

const taskSchema = new mongoose.Schema({
  title: { type: String, required: true },
  blogParagraph: String,
  csDiagnosis: string,
  csTreatment: string,
  csQuestion1: string,
  csQuestion2: string,
  csDoctorName: string,
  videoUrl: string,
  infographic1: string,
  infographic2: string,
  infographic3: string,
  infographic4: string,
  infographic5: string,
  infographic6: string,
  taskType: { type: mongoose.Schema.Types.ObjectId, ref: 'TaskType', required: true },
  dueDate: { type: Date, required: true }  
});

const Task = mongoose.model('Task', taskSchema);

==============================================================================================================================

const userTaskSchema = new mongoose.Schema({
  user: { 
    type: mongoose.Schema.Types.ObjectId, 
    ref: 'User', required: true 
    }
  task: { 
    type: mongoose.Schema.Types.ObjectId, 
    ref: 'Task', required: true 
    },
  completed: { 
    type: Boolean, 
    default: false },
  completionDate: Date,
  likes: { type: Number, default: 0 },
  createdBy: {
        type: String,
        required: true
    },
    createdDate: {
        type: Date,
        default: Date.now
    },
    updatedBy: {
        type: String
    },
    updatedDate: {
        type: Date
    },
    deletedBy: {
        type: String
    },
    deletedDate: {
        type: Date
    }
});

const UserTask = mongoose.model('UserTask', userTaskSchema);


====================


const announcementBannerSchema = new Schema({
    title: {
        type: String,
        required: true
    },
    linkUrl: {
        type: String,
        required: true
    },
    imageUrl: {
        type: String,
        required: true
    },
    createdBy: {
        type: String,
        required: true
    },
    createdDate: {
        type: Date,
        default: Date.now
    },
    updatedBy: {
        type: String
    },
    updatedDate: {
        type: Date
    },
    deletedBy: {
        type: String
    },
    deletedDate: {
        type: Date
    }
});

const AnnouncementBanner = mongoose.models.AnnouncementBanner || mongoose.model('AnnouncementBanner', announcementBannerSchema);
module.exports = AnnouncementBanner;
